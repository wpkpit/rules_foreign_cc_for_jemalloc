# load("@rules_foreign_cc//foreign_cc:defs.bzl", "configure_make")

package(default_visibility = ["//visibility:public"])

filegroup(
    name = "jemalloc_all_srcs",
    srcs = glob(["**"]),
)

filegroup(
    name = "jemalloc_headers",
    srcs = glob(["include/**/*.h"]),
)

filegroup(
    name = "jemalloc_srcs",
    srcs = glob(["src/**/*.c", "src/**/*.cpp"]),
)

## I tested and this builds for me on MAC and Linux, did not check Windows thouigh
#configure_make(
#    name = "jemalloc",
#    lib_source = ":all_srcs",
#    out_shared_libs = [
#        "libjemalloc.so",
#        "libjemalloc.so.2"
#     ],
##    out_shared_libs = ["libjemalloc.so"],
##    out_static_libs = ["libjemalloc.a"],
#)

cc_library(
    name = "jemalloc",
    hdrs = [
        ":jemalloc_headers",
        #"@ddad//jemalloc:jemalloc_unix_headers",
    ],
    copts = [
        #"-Ijemalloc/include_unix",
        #"-Iexternal/gtest/include"
    ],
    defines = [
        "_GNU_SOURCE",
        "_REENTRANT",
        "JEMALLOC_NO_PRIVATE_NAMESPACE",
    ],
    #linkopts = ["-pthread"],
    srcs = [
        ":jemalloc_srcs",
    ],
    includes = [
        "include", 
        #"@ddad//jemalloc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@ddad//jemalloc:jemalloc_unix_lib",
    ],
)

## to use pre-built-library
#cc_library(
#    name = "jemalloc",
#    srcs = [
#        "path/to/lib/libjemalloc.a",
#    ],
#    hdrs = glob(["path/to/include/*.h"]),
#    includes = ["path/to/include"],
#)
